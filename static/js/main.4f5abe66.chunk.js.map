{"version":3,"sources":["components/Navs.styled.js","components/Nav.js","components/Title.styled.js","components/Title.js","components/MainPageLayout.js","components/unnamed.jpg","components/styled.js","components/show/ShowCard.styled.js","components/show/ShowCard.js","misc/config.js","misc/custom-hooks.js","components/show/ShowGrid.js","components/actors/ActordCard.styled.js","components/actors/ActorCard.js","components/actors/ActorGrid.js","pages/Home.styled.js","components/CustomRadio.js","pages/Home.js","pages/Starred.js","components/show/ShowMainData.styled.js","components/show/ShowMainData.js","components/show/Seasons.styled.js","components/show/Seasons.js","components/show/Details.styled.js","components/show/Details.js","components/show/Cast.styled.js","components/show/Cast.js","pages/Show.styled.js","pages/Show.js","App.js","index.js"],"names":["NavList","styled","ul","LinkStyled","Link","theme","mainColors","gray","blue","LINKS","to","text","Nav","location","useLocation","map","item","className","pathname","TitleWrapper","div","dark","Title","title","subtitle","MainPageLayout","children","FlexGrid","FadeIn","SearchCard","Star","props","active","StyledShowCrad","ShowCard","id","image","name","summary","onStarClick","isStarred","summaryAsText","split","slice","join","replace","src","alt","type","onClick","API_BASE_URL","apiGet","queryString","a","fetch","then","response","json","showsReducer","prevState","action","showId","filter","usePersistedReducer","reducer","initialState","key","useReducer","initial","persisted","localStorage","getItem","JSON","parse","state","dispatch","useEffect","setItem","stringify","useShows","isLoading","error","show","ShowGrid","data","starredShows","dispatchStarred","includes","medium","NotFound","StyledActorCrad","ActorCard","gender","country","birthday","deathday","ActorGrid","person","SearchInput","input","RadioInputsWrapper","SearchButtonWrapper","RadioWrapper","label","CustomRadio","restProps","htmlFor","Home","useState","sessionStorage","setInput","newState","useLastQuery","result","setResult","searchOption","setSearchOption","isShowSearch","onSearch","onRadioChange","ev","target","value","placeholder","onChange","onKeyDown","keyCode","checked","length","Starred","starred","shows","setShows","setIsLoading","setError","promises","Promise","all","apiData","results","catch","err","message","MainDataWrapper","Headline","TagList","ShowMainData","rating","tags","original","average","dangerouslySetInnerHTML","__html","tag","i","SeasonsWrapper","SeasonsList","Seasons","seasons","reduce","acc","season","episodeOrder","endDate","DetailsWrapper","Details","status","premiered","network","CastList","Cast","cast","character","voice","img","ShowPageWrapper","InfoBlock","Show","isMounted","useShow","useParams","genres","_embedded","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f5abe66.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  list-style: none;\r\n  margin: 0 0 30px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const LinkStyled = styled(Link)`\r\n  margin: 0 10px;\r\n  padding: 3px 15px;\r\n  position: relative;\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.mainColors.gray};\r\n  &.active{\r\n    color:  ${({ theme }) => theme.mainColors.blue};\r\n    &:after {\r\n      content: '';\r\n      position:absolute;\r\n      display: block;\r\n      height: 2px;\r\n      left: 0%;\r\n      bottom: 0;\r\n      background-color: ${({ theme }) => theme.mainColors.blue};\r\n      animation: slide-in 0.3s ease-in forwards;\r\n      @keyframes slide-in {\r\n        from{\r\n          left: 50%;\r\n          width: 0\r\n        }\r\n        to{\r\n          left: 0%;\r\n          width: 100%\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {NavList, LinkStyled} from './Navs.styled'\r\n\r\nconst LINKS = [\r\n  {to: '/', text: 'Home'},\r\n  {to: '/starred', text: 'Starred'}\r\n]\r\nconst Nav = () => {\r\n  const location = useLocation()\r\n  return (\r\n    <div>\r\n      <NavList>\r\n        {LINKS.map(item => (\r\n          <li key={item.to}>\r\n            <LinkStyled to={item.to} className={item.to === location.pathname ? 'active' : ''}>{item.text}</LinkStyled>\r\n          </li>\r\n        ))}\r\n      </NavList>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import styled from 'styled-components';\r\n\r\nexport const TitleWrapper = styled.div`\r\n  text-align: center;\r\n  margin: 0 0 40px;\r\n\r\n  h1{\r\n    color: ${({ theme }) => theme.mainColors.blue};\r\n    letter-spacing: 10px;\r\n    text-decoration: uppercase;\r\n    margin: 0 0 10px;\r\n  }\r\n\r\n  p{\r\n    color: ${({ theme }) => theme.mainColors.dark};\r\n    margin: 0;\r\n  }\r\n`;","import React from 'react';\r\nimport { TitleWrapper } from './Title.styled'\r\n\r\nconst Title = ({ title, subtitle}) => {\r\n  return (\r\n    <TitleWrapper>\r\n        <h1>{title}</h1>\r\n        <p>{subtitle}</p>\r\n    </TitleWrapper>\r\n  )\r\n}\r\n\r\nexport default Title\r\n","import React from 'react';\r\nimport Nav from '../components/Nav';\r\nimport Title from './Title'\r\n\r\nconst MainPageLayout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <Title title=\"Show Box\" subtitle=\"Are you looking for a movie or actor?\"/>\r\n      <Nav />\r\n      { children }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainPageLayout\r\n","export default __webpack_public_path__ + \"static/media/unnamed.9ad0be26.jpg\";","import FadeIn from 'react-fade-in';\r\nimport styled from 'styled-components';\r\n\r\nexport const FlexGrid = styled(FadeIn)`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nexport const SearchCard = styled.div`\r\n  width: 300px;\r\n  height: 100%;\r\n  margin: 0 15px 40px;\r\n\r\n  .img-wrapper {\r\n    width: 100%;\r\n    border-radius: 40px;\r\n    height: 420px;\r\n    overflow: hidden;\r\n    border: 1px solid #ddd;\r\n  }\r\n  img{\r\n    object-fit: cover;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  h1 {\r\n    margin: 10px 0;\r\n    font-size: 21px;\r\n  }\r\n  p {\r\n    margin: 0;\r\n  }\r\n`\r\nexport const Star = styled.div`\r\n  display: inline-block;\r\n  width: 18px;\r\n  height: 18px;\r\n  background-color: ${props => (props.active ? \"#ffc806\" : '#ddd')};\r\n  clip-path: polygon(\r\n    50% 0%,\r\n    61% 35%,\r\n    98% 35%,\r\n    68% 57%,\r\n    79% 91%,\r\n    50% 70%,\r\n    21% 91%,\r\n    32% 57%,\r\n    2% 35%,\r\n    39% 35%\r\n  );\r\n`","import styled from 'styled-components';\r\n\r\nimport { SearchCard } from '../styled';\r\n\r\nexport const StyledShowCrad = styled(SearchCard)`\r\n  .btns {\r\n    margin-top: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    a {\r\n      text-decoration-color: #000;\r\n      color: #000;\r\n      &:hover{\r\n        text-decoration-color: blue;\r\n        color: blue;\r\n      }\r\n    }\r\n    button{\r\n      outline: none;\r\n      border: 1px solid #8e8e8e;\r\n      border-radius: 15px;\r\n      padding: 5px 20px;\r\n      background: #fff;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      &:hover{\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { StyledShowCrad } from './ShowCard.styled';\r\nimport {Star} from '../styled'\r\n\r\n\r\n\r\nconst ShowCard = ({id, image, name, summary, onStarClick, isStarred }) => {\r\n  const summaryAsText = summary\r\n  ? `${summary.split(' ').slice(0, 10).join(' ').replace(/<.+?>/g, '')}...`\r\n  : 'No description';\r\n\r\n  return (\r\n    <StyledShowCrad>\r\n      <div className=\"img-wrapper\">\r\n        <img src={image} alt=\"show\"/>\r\n      </div>\r\n      <h1>{name}</h1>\r\n      <p>{summaryAsText}</p>\r\n      <div className=\"btns\">\r\n        <Link to ={`/show/${id}`}>Read more</Link>\r\n        <button type=\"button\" onClick={onStarClick}>\r\n          <Star active={isStarred}/>\r\n        </button>\r\n      </div>\r\n    </StyledShowCrad>\r\n  );\r\n};\r\nexport default ShowCard\r\n","const API_BASE_URL = \"https://api.tvmaze.com\";\r\n\r\nexport async function apiGet(queryString){\r\n  const response = await fetch(`${API_BASE_URL}${queryString}`)\r\n .then(response => response.json());\r\n  return response;\r\n}","import { useReducer, useEffect, useState } from 'react';\r\nimport {apiGet} from './config';\r\n\r\nfunction showsReducer(prevState, action){\r\n\r\n  switch(action.type){\r\n\r\n    case 'ADD':{\r\n      return [...prevState, action.showId]\r\n    }\r\n    case \"REMOVE\":{\r\n      return prevState.filter(showId => showId !== action.showId)\r\n    }\r\n\r\n    default: return prevState;\r\n  }\r\n}\r\n\r\nfunction usePersistedReducer(reducer, initialState, key){\r\n  const [ state, dispatch] = useReducer(reducer, initialState, (initial) => {\r\n    const persisted = localStorage.getItem(key);\r\n\r\n    return persisted ? JSON.parse(persisted) : initial\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state))\r\n  }, [state, key])\r\n\r\n  return [state, dispatch]\r\n}\r\n\r\nexport function useShows(key = \"shows\"){\r\n\r\n  return usePersistedReducer(showsReducer, [], key)\r\n}\r\n\r\nexport function useLastQuery(key = 'lastQuery'){\r\n  const [input, setInput] = useState(() => {\r\n    const persisted = sessionStorage.getItem(key);\r\n\r\n    return persisted ? JSON.parse(persisted) : \"\";\r\n  })\r\n\r\n  const setPersistedInput = newState =>{\r\n    setInput(newState);\r\n    sessionStorage.setItem(key, JSON.stringify(newState));\r\n  };\r\n  \r\n  return [input, setPersistedInput]\r\n}\r\n\r\nconst reducer = (prevState, action) => {\r\n  switch(action.type){\r\n\r\n    case 'FETCH_SUCCES':{\r\n      return {isLoading: false, error: null, show: action.show}\r\n    }\r\n\r\n    case 'FETCH_FAILED': {\r\n      return {...prevState, isLoading: false, error: action.error}\r\n    }\r\n\r\n    default: return prevState\r\n  }\r\n}\r\n\r\nexport function useShow(showId){\r\n  const [{state, dispatch}] = useReducer(\r\n    reducer,\r\n    {\r\n      show: null,\r\n      isLoading: true,\r\n      error: null\r\n    });\r\n\r\n  useEffect (() => {\r\n    let isMounted = true;\r\n    apiGet(`/shows/${showId}?embed[]=seasons&embed[]=cast`)\r\n    .then(results => {\r\n\r\n    if(isMounted){\r\n\r\n      dispatch( {type: 'FETCH_SUCCES', show: results} )\r\n    }\r\n\r\n    })\r\n    .catch(err => {\r\n      if(isMounted){\r\n        dispatch( {type: 'FETCH_FAILED', error: err.message} )\r\n    }})\r\n    return () => {\r\n      isMounted = false;\r\n    }\r\n  }, [showId])\r\n\r\n  return state\r\n}","import React from 'react';\r\nimport NotFound from '../unnamed.jpg';\r\nimport ShowCard from '../show/ShowCard';\r\nimport { FlexGrid } from '../styled'\r\nimport { useShows } from '../../misc/custom-hooks';\r\n\r\nconst ShowGrid = ({data}) => {\r\n\r\n  const [starredShows, dispatchStarred] = useShows()\r\n  return (\r\n    <FlexGrid>\r\n      {data.map(({ show }) => {\r\n\r\n        const isStarred = starredShows.includes(show.id);\r\n\r\n        const onStarClick = () => {\r\n          if(isStarred){\r\n            dispatchStarred({type: 'REMOVE', showId: show.id })\r\n          }else{\r\n            dispatchStarred({type:'ADD', showId: show.id })\r\n          }\r\n        }\r\n\r\n          return (\r\n            <ShowCard \r\n            key={show.id} \r\n            id={show.id} \r\n            name={show.name} \r\n            image={show.image ? show.image.medium : NotFound}\r\n            summary={show.summary}\r\n            onStarClick={onStarClick}\r\n            isStarred={isStarred}\r\n          />\r\n          );\r\n        })}\r\n    </FlexGrid>\r\n  );\r\n};\r\n\r\nexport default ShowGrid\r\n","import styled from 'styled-components';\r\n\r\nimport { SearchCard } from '../styled';\r\n\r\nexport const StyledActorCrad = styled(SearchCard)`\r\n  .deathday{\r\n    margin: 0;\r\n    margin-top:15px;\r\n    font-weight: bold;\r\n  }\r\n`","import React from 'react';\r\nimport {StyledActorCrad} from './ActordCard.styled';\r\n\r\nconst ActorCard = ({image, name, gender, country, birthday, deathday}) => {\r\n  return (\r\n    <StyledActorCrad>\r\n      <div className=\"img-wrapper\">\r\n        <img src={image} alt=\"actor\"/>\r\n      </div>\r\n      <h1>{name} {gender ? `(${gender})` : null}</h1>\r\n      <p>{country ? `Comes from ${country}` : 'No country known'}</p>\r\n      {birthday ? <p>Born {birthday}</p> : null}\r\n      <p className=\"deathday\">{deathday ? `Died ${deathday}` : 'Alive'}</p>\r\n    </StyledActorCrad>\r\n  )\r\n}\r\n\r\nexport default ActorCard;\r\n","import React from 'react'\r\nimport ActorCard from '../actors/ActorCard';\r\nimport NotFound from '../unnamed.jpg';\r\nimport { FlexGrid } from '../styled'\r\n\r\nconst ActorGrid = ({ data }) => {\r\n  return (\r\n    <FlexGrid>\r\n      {data.map(({ person }) => (\r\n        <ActorCard \r\n          key={person.id}\r\n          name={person.name}\r\n          country={person.country ? person.country.name : null}\r\n          birthday={person.birthday}\r\n          deathday={person.deathday}\r\n          gender={person.gender}\r\n          image={person.image ? person.image.medium : NotFound}\r\n        />\r\n      ))}\r\n    </FlexGrid>\r\n  )\r\n}\r\n\r\nexport default ActorGrid\r\n","import styled from 'styled-components';\r\n\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  font-family: 'Roboto', sans-serif;\r\n  width: 200px;\r\n  margin: auto;\r\n  outline: none;\r\n  padding: 13px 15px;\r\n  border: 1px solid #dbdbdb;\r\n  box-shadow: 0px 0px 10px 0px rgba(219, 219, 219, 0.5);\r\n  font-size: 14px;\r\n  border-radius:12px;\r\n  color: #8d8d8d;\r\n\r\n  &::placeholder{\r\n    font-weight: 300;\r\n    color: #8d8d8d;\r\n  } \r\n`;\r\n\r\nexport const RadioInputsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 20px 0;\r\n\r\n  div {\r\n    margin: 0 15px\r\n  }\r\n`\r\n\r\nexport const SearchButtonWrapper = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 35px;\r\n\r\n  button{\r\n    color: #fff;\r\n    background-color:  ${({ theme }) => theme.mainColors.blue};\r\n    margin: auto;\r\n    padding: 10px 50px;\r\n    font-size: 15px;\r\n    border: none;\r\n    outline: none;\r\n    border-radius:12px;\r\n    &:hover{\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst RadioWrapper = styled.label`\r\n  display:block;\r\n  position: relative;\r\n  padding-left: 25px;\r\n  cursor: pointer;\r\n  font-size: 13px;\r\n  user-select: none;\r\n  font-weight: 700;\r\n  line-height: 1.65;\r\n\r\n  input{\r\n    position:absolute;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n  }\r\n\r\n  span{\r\n    position:absolute;\r\n    top:0;\r\n    left: 0;\r\n    height: 16px;\r\n    width: 16px;\r\n    background-color: #fff;\r\n    border: 2px solid ${({ theme }) => theme.mainColors.blue};\r\n    border-radius: 50%;\r\n  }\r\n\r\n  span:after{\r\n    content: '';\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n\r\n  input:checked ~ span:after{\r\n    display: block;\r\n  }\r\n\r\n  span:after{\r\n    top: 4px;\r\n    left: 4px;\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n    background: ${({ theme }) => theme.mainColors.blue};\r\n  }\r\n`\r\n\r\nconst CustomRadio = ({label, ...restProps}) => {\r\n  return (\r\n    <RadioWrapper htmlFor={restProps.id}>\r\n      {label}\r\n      <input \r\n        {...restProps} \r\n        type=\"radio\" \r\n      />\r\n      <span />\r\n    </RadioWrapper>\r\n  )\r\n}\r\n\r\nexport default CustomRadio\r\n","import React, {useState} from 'react';\r\nimport MainPageLayout from '../components/MainPageLayout';\r\nimport ShowGrid from '../components/show/ShowGrid';\r\nimport { apiGet } from '../misc/config';\r\nimport ActorGrid from '../components/actors/ActorGrid';\r\nimport {useLastQuery} from '../misc/custom-hooks';\r\nimport {SearchInput, RadioInputsWrapper, SearchButtonWrapper} from './Home.styled';\r\nimport CustomRadio from '../components/CustomRadio';\r\n\r\n\r\nconst Home = () => {\r\n  const [input, setInput] = useLastQuery();\r\n  const [result, setResult ] = useState(null);\r\n  const [searchOption, setSearchOption ] = useState('shows');\r\n\r\n  const isShowSearch = searchOption === 'shows'\r\n\r\n  const onSearch = () =>{\r\n    apiGet(`/search/${searchOption}?q=${input}`).then(result => {\r\n      setResult(result)\r\n    })\r\n}\r\n\r\n  const onInputChange = (ev) => {\r\n    setInput(ev.target.value)\r\n  }\r\n  const onKeyDown = (ev) => {\r\n    if(ev.keyCode === 13){\r\n      onSearch()\r\n    }\r\n  }\r\n  const onRadioChange = (ev) => {\r\n    setSearchOption(ev.target.value)\r\n  }\r\n\r\n  const renderResults= () => {\r\n    if(result && result.length === 0){\r\n      return <div>No results</div>\r\n    }\r\n\r\n    if(result && result.length > 0){\r\n      return (\r\n        result[0].show ? \r\n          <ShowGrid data={result} /> : <ActorGrid data={result} />\r\n      )\r\n      }\r\n\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <MainPageLayout>\r\n      <SearchInput \r\n        type=\"text\" \r\n        placeholder=\"Search for something\"\r\n        onChange={onInputChange} \r\n        onKeyDown={onKeyDown} \r\n        value={input}\r\n      />\r\n      <RadioInputsWrapper>\r\n        <div>\r\n          <CustomRadio\r\n            label=\"Shows\" \r\n            id=\"shows-search\"\r\n            value=\"shows\" \r\n            checked={isShowSearch}\r\n            onChange={onRadioChange}\r\n          />\r\n        </div>\r\n        <div>\r\n        <CustomRadio\r\n            label=\"Actors\" \r\n            id=\"actors-search\"\r\n            value=\"people\" \r\n            checked={!isShowSearch}\r\n            onChange={onRadioChange}\r\n          />\r\n        </div>\r\n      </RadioInputsWrapper>\r\n      <SearchButtonWrapper>\r\n        <button type=\"button\" onClick={onSearch}>\r\n          Search\r\n        </button>\r\n      </SearchButtonWrapper>\r\n      {renderResults()}\r\n    </MainPageLayout>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, {useState, useEffect} from 'react'\r\nimport MainPageLayout from '../components/MainPageLayout';\r\nimport { useShows } from '../misc/custom-hooks';\r\nimport { apiGet } from '../misc/config';\r\nimport ShowGrid from '../components/show/ShowGrid';\r\n\r\nconst Starred = () => {\r\n\r\n  const [starred] = useShows();\r\n\r\n  const [shows, setShows] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    \r\n    if(starred && starred.length > 0){\r\n      const promises = starred.map(showId => apiGet(`/shows/${showId}`))\r\n\r\n      Promise.all(promises)\r\n        .then(apiData => apiData.map(show => ({show})))\r\n        .then(results => {\r\n          setShows(results);\r\n          setIsLoading(false);\r\n        })\r\n        .catch(err => {\r\n          setError(err.message);\r\n          setIsLoading(false)\r\n        });\r\n    }else{\r\n      setIsLoading(false);\r\n    }\r\n  }, [starred])\r\n\r\n  return (\r\n    <MainPageLayout>\r\n      {isLoading && <div>Shows are still loading</div>}\r\n      {error && <div>Error occured: {error}</div>}\r\n      {!isLoading && !shows && <div>No shows were added</div>}\r\n      {!isLoading && !error && shows && <ShowGrid data={shows} />}\r\n    </MainPageLayout>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import styled from 'styled-components';\r\n\r\nexport const MainDataWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 40px;\r\n\r\n  img{\r\n    min-width: 250px;\r\n    width: 300px;\r\n    max-width: 450px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 40px;\r\n  }\r\n  \r\n  .text-side{\r\n    margin-left: 20px;\r\n    .summary {\r\n       color: #5f5f5f;\r\n       line-height: 1.5;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 768px){\r\n    flex-wrap: wrap;\r\n    img{\r\n      margin-bottom: 20px;\r\n      margin: auto;\r\n    }\r\n    .text-side{\r\n      margin-left: 0;\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n`\r\nexport const Headline = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n  h1{\r\n    margin: 0;\r\n    border-right: 1px solid #ddd;\r\n    padding-right: 25px;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  div{\r\n    display: flex;\r\n    align-items: center;\r\n    span{\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n  \r\n`;\r\n\r\nexport const TagList = styled.div`\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n  \r\n  span{\r\n    margin: 6px;\r\n    margin-bottom: 0;\r\n    color: blue;\r\n    background-color: #d0c9ff;\r\n    padding: 3px 13px;\r\n    border-radius: 20px;\r\n    font-size: 14px;\r\n  }\r\n`;","import React from 'react'\r\nimport NotFound from '../unnamed.jpg';\r\nimport { Star } from '../styled.js'\r\nimport { MainDataWrapper, Headline, TagList } from './ShowMainData.styled';\r\n\r\nconst ShowMainData = ({ name, rating, summary, tags, image}) => {\r\n  return (\r\n    <MainDataWrapper>\r\n      <img src={image ? image.original : NotFound} alt=\"show-cover\"/>\r\n      <div className=\"text-side\">\r\n        <Headline>\r\n          <h1>{name}</h1>\r\n          <div>\r\n            <Star active />\r\n            <span>{rating.average || \"N/A\"}</span>\r\n          </div>\r\n        </Headline>\r\n        <div \r\n          className=\"summary\"\r\n          dangerouslySetInnerHTML={{ __html: summary}}/>\r\n\r\n        <div>\r\n          Tags:{\" \"}\r\n          <TagList>\r\n            {tags.map((tag, i) => (\r\n              <span key={i}>{tag}</span>\r\n            ))}\r\n          </TagList>\r\n        </div>\r\n      </div>\r\n    </MainDataWrapper>\r\n  )\r\n}\r\n\r\nexport default ShowMainData\r\n","import styled from 'styled-components';\r\n\r\nexport const SeasonsWrapper = styled.div`\r\n  p{\r\n    margin: 5px 0;\r\n  }\r\n  span{\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport const SeasonsList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .seasons-item{\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n\r\n    &:last-child{\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    .left{\r\n      flex: 0 0 30%;\r\n      border-right: 1px solid #b0b0b0;\r\n      padding-right: 20px;\r\n    }\r\n    .right{\r\n      padding-left: 20px;\r\n      flex: 1;\r\n    }\r\n  }\r\n`","import React from 'react';\r\nimport {SeasonsWrapper, SeasonsList } from './Seasons.styled'\r\n\r\nconst Seasons = ({ seasons }) => {\r\n  return (\r\n    <SeasonsWrapper>\r\n      <p>\r\n        Seasons in total: <span>{seasons.length}</span>\r\n      </p>\r\n      <p>\r\n        Episodes in total: {''}\r\n        <span>\r\n          {seasons.reduce((acc, season) => acc + season.episodeOrder, 0)}\r\n        </span>\r\n      </p>\r\n      <SeasonsList>\r\n        {seasons.map(season => (\r\n          <div key={season.id} className=\"seasons-item\">\r\n            <div className=\"left\">\r\n              <p>Season {season.id}</p>\r\n              <p>\r\n                Episodes: <span>{season.episodeOrder}</span>\r\n              </p>\r\n            </div>\r\n            <div className=\"right\">\r\n              Aired: {' '}\r\n              <span>\r\n                {season.episodeOrder} - {season.endDate}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </SeasonsList>\r\n    </SeasonsWrapper>\r\n  )\r\n}\r\n\r\nexport default Seasons\r\n","import styled from 'styled-components';\r\n\r\nexport const DetailsWrapper = styled.div`\r\n  p {\r\n    margin: 5px 0;\r\n    \r\n    span{\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`","import React from 'react';\r\nimport {DetailsWrapper} from './Details.styled'\r\n\r\nconst Details = ({ status, premiered, network}) => {\r\n  return (\r\n    <DetailsWrapper>\r\n      <p>\r\n        Status: <span>{status}</span>\r\n      </p>\r\n      <p>\r\n        Premiered {premiered} {network ? `on ${network.name}` : null}\r\n      </p>\r\n    </DetailsWrapper>\r\n  );\r\n};\r\n\r\nexport default Details\r\n","import styled from 'styled-components';\r\n\r\nexport const CastList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  .cast-item{\r\n    flex: 1 0 50%;\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    align-items: center;\r\n\r\n    @media only screen and (max-width: 768px){\r\n      flex: 1 0 100%;\r\n    }\r\n\r\n    .pic-wrapper{\r\n      width: 50px;\r\n      min-width: 50px;\r\n      height: 50px;\r\n      overflow: hidden;\r\n      border-radius: 50%;\r\n      img{\r\n        object-fit: cover;\r\n        width: 100%;\r\n        height: 100%\r\n      }\r\n    }\r\n\r\n    .actor{\r\n      margin-left: 25px;\r\n      .bold{\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react';\r\nimport NotFound from '../unnamed.jpg';\r\nimport {CastList} from './Cast.styled'\r\n\r\nconst Cast = ({ cast }) => {\r\n  return (\r\n    <CastList>\r\n      {cast.map(({ person, character, voice}, key) => (\r\n        <div key={key} className=\"cast-item\">\r\n          <div className=\"pic-wrapper\">\r\n            <img \r\n              src={person.img ? person.image.medium : NotFound}\r\n              alt=\"cast-person\"\r\n            />\r\n          </div>\r\n          <div className=\"actor\">\r\n            <span>\r\n              <span className=\"bold\">{person.name}</span> | {character.name} {voice ? ' | Voice' : \"\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </CastList>\r\n  );\r\n}\r\n\r\nexport default Cast\r\n","import styled from 'styled-components'\r\n\r\nexport const ShowPageWrapper = styled.div`\r\n  padding: 0 20px;\r\n\r\n  @media only screen and (min-width: 516px){\r\n    padding: 0 40px;\r\n  }\r\n  @media only screen and (min-width: 768px){\r\n    padding: 0 60px;\r\n  }\r\n  @media only screen and (min-width: 992px){\r\n    padding: 0 80px;\r\n  }\r\n`;\r\n\r\nexport const InfoBlock = styled.div`\r\n  margin-bottom: 40px;\r\n  h2{\r\n    margin: 0;\r\n    margin-bottom: 30px;\r\n    font-size: 22px;\r\n  }\r\n`;","import React from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport ShowMainData from '../components/show/ShowMainData';\r\nimport Seasons from '../components/show/Seasons';\r\nimport Details from '../components/show/Details';\r\nimport Cast from '../components/show/Cast';\r\nimport { ShowPageWrapper, InfoBlock } from '../pages/Show.styled'\r\nimport { useShow } from '../misc/custom-hooks'\r\n\r\nconst Show = () => {\r\n  const {id} = useParams();\r\n  const {show, isLoading, error} = useShow(id)\r\n\r\n  if(isLoading){\r\n    return <div>Date is being loaded</div>\r\n  }\r\n\r\n  if(error){\r\n    return <div>Error accured: {error}</div>\r\n  }\r\n\r\n  return (\r\n    <ShowPageWrapper>\r\n      <ShowMainData \r\n        image={show.image}\r\n        name={show.name}\r\n        rating={show.rating}\r\n        summary={show.summary}\r\n        tags={show.genres}\r\n      />\r\n      <InfoBlock>\r\n        <h2>Details</h2>\r\n        <Details \r\n          status={show.status}\r\n          network={show.network}\r\n          premiered={show.premiered}\r\n        />\r\n      </InfoBlock>\r\n      <InfoBlock>\r\n        <h2>Seasons</h2>\r\n        <Seasons \r\n          seasons={show._embedded.seasons}\r\n        />\r\n      </InfoBlock>\r\n      <InfoBlock>\r\n        <h2>Cast</h2>\r\n        <Cast \r\n          cast={show._embedded.cast}\r\n        />\r\n      </InfoBlock>\r\n    </ShowPageWrapper>\r\n  )\r\n}\r\n\r\nexport default Show\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components'\nimport Home from './pages/Home';\nimport Starred from './pages/Starred';\nimport Show from './pages/Show'\n\nconst theme = {\n  mainColors: {\n    blue: '#2400ff',\n    gray: '#c6c6c6',\n    dark: '#353535',\n  },\n};\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/starred\">\n          <Starred />\n        </Route>\n        <Route exact path=\"/show/:id\">\n          <Show />\n        </Route>\n        <Route>\n          <div>Not found</div>\n        </Route>\n      </Switch>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, document.getElementById('root')\n);\n\n"],"sourceRoot":""}